# Constraint Enforcement MCP Server - Sample Configuration
# This is a sample constraint pack demonstrating the YAML configuration format
# for the Constraint Enforcement MCP Server (Step 3 implementation)

version: "0.1.0"

# Sample constraints for TDD and Hexagonal Architecture
# These will be implemented in Step 3-5 of the walking skeleton
constraints:
  - id: tdd.test-first
    title: "Write a failing test first"
    priority: 0.92
    phases: [kickoff, red, commit]
    reminders:
      - "Start with a failing test (RED) before implementation."
      - "Let the test drive the API design and behavior."
      
  - id: arch.hex.domain-pure
    title: "Domain must not depend on Infrastructure"
    priority: 0.88
    phases: [red, green, refactor]
    reminders:
      - "Domain layer: pure business logic, no framework dependencies."
      - "Use ports (interfaces) to define infrastructure contracts."

  - id: quality.yagni
    title: "You Aren't Gonna Need It"
    priority: 0.75
    phases: [green, refactor]
    reminders:
      - "Implement only what's needed right now."
      - "Avoid speculative generality and over-engineering."

# Scheduling configuration (implemented in Step 4)
schedule:
  injectionPoints: [session-start, pre-tool-call, session-end]
  cadence:
    everyNInteractions: 5  # Research-backed optimal attention retention
    phaseOverrides: 
      kickoff: 1  # Higher frequency at session start
      red: 2      # More reminders during test writing
  anchors:
    prologue:
      - "Remember: Test-first, boundaries matter, YAGNI applies."
    epilogue:
      - "Before commit: All tests green? Architecture clean?"

# Note: This is a sample configuration for Step 3+ implementation
# Current walking skeleton (Step 1) does not yet load or process this file